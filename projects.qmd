---
title: Selected Projects
---

1. [Dino | Programming Language Using Python Based Interpreter](https://github.com/CS327-Dino/Dino)
* Constructed a fully functional programming language ’Dino’ on top of Python and devised its syntax and scoping.
*  Collaborated in a team on GitHub to develop Tree-Walk as well as Byte-Code interpreter for the language.
* Implemented a tokenizer, parser, resolver, and evaluator for the interpreter, ensuring efficient and accurate output.

2. [eBPF: Packet Filter](https://github.com/Inderjeet-23/eBPF-Packet-Filter)
* Implemented a kernel packet filter using eBPF to detect and drop harmful or untrustworthy packets, enhancing system security by preventing malicious content from affecting the system.
*  Developed a port forwarding tool to efficiently redirect incoming packets, optimizing network traffic and balancing system load by distributing packets to different ports.
* Designed and tested DoS attack prevention features, including garbage traffic simulation and intelligent IP blocking, demonstrating the effectiveness of eBPF in improving network resilience.

3. [Reputation and Conflict Propagation in Signed Networks](https://drive.google.com/file/d/1Bg1EDM1E27PPB10x3VCDgcieSOu78Z0R/view)
* Investigated Signed Reddit Hyperlink Network, and defined mathematical notions of trustworthiness among network nodes across 86 different edge attributes.
*  Applied RandomForest Algorithm on network edge attributes and formulated hate factor for each subreddit post.
* Predicted conflict propagation in the network using analysis of varied centrality measures and an LSTM model.

4. [Statistical Language Modeling using N-Grams](https://github.com/CS613-NLP/assignment-2)
* Spearheaded a comprehensive NLP pipeline for processing a vast dataset of Reddit comments, initiating data cleaning and preprocessing techniques to refine and tokenize the corpus, ensuring optimal quality for subsequent analysis.
*  Engineered a custom Language Modeling class from the ground up, integrating advanced smoothing techniques including Laplace, Add-k, and Good-Turing for n-gram models (unigram to pentagram), meticulously evaluating their efficacy through rigorous log perplexity value comparisons to ascertain the most effective smoothing strategy. 

5. [Alumni Database Management System](https://github.com/RahulVC02/Alumni-Database-Webapp)
* Worked in a team to develop an Alumni Database System for IIT Gandhinagar from ER Diagram to MySQL database creation, with Flask hosting and Tailwind CSS-driven UI, facilitating role-specific access.
*  Engineered features that encompass data management functionalities like insertion, updates, deletions, filtering, indexing, and custom searches, empowering admin with data export, import, and mailing tools.

6. [Neural Networks vs Tree Based Algorithm on Tabular Data](https://drive.google.com/file/d/1Jca22e6IkQPnA3JLOPxXvbb_EMrrU6yN/view?usp=sharing)
* Explored the performance of deep learning methods versus tree-based methods on tabular data, finding instances where tree-based models outshines and areas where deep learning can improve.
*  Utilized various input data transformation techniques, such as feature rotation and smoothing along with comparison of state-of-the-art tree based models like XGBoost against deep learning architectures like Hopular and TabPFN.
* Improved neural network performance through techniques such as input embedding, data augmentation, and regularization methods, demonstrating that deep learning can surpass tree-based models in a few scenarios. 

7. ISRO's Web-based visualization tool for AstroSat Observations
* Developed a standalone application and interactive web-based tool for visualizing ISRO's AstroSat observations using Python's Streamlit and Folium library.
*  Implemented data cleaning and analyzing techniques on astronomical databases using Pandas and Numpy libraries.